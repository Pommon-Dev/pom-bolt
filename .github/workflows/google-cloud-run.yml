name: Deploy to Google Cloud Run

on:
  push:
    branches: [cloud-run-deploy]
  workflow_dispatch:
    inputs:
      deploy_tag:
        description: 'Tag for deployment (default: latest)'
        required: false
        default: 'latest'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  REPOSITORY: pom-bolt
  IMAGE_NAME: bolt-ai
  SERVICE_NAME: pom-bolt

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'
          
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        id: docker-build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          target: bolt-ai-cloudrun
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          flags: |
            --allow-unauthenticated
            --port=8080
            --memory=1Gi
            --cpu=1
            --min-instances=0
            --max-instances=10
          env_vars: |
            RUNNING_IN_CLOUD_RUN=true
            NODE_ENV=production
          secrets: |
            ANTHROPIC_API_KEY=ANTHROPIC_API_KEY:latest
            OPENAI_API_KEY=OPENAI_API_KEY:latest
            BETA_ACCESS_CODES=BETA_ACCESS_CODES:latest

      - name: Show Output
        run: |
          echo "Service URL: ${{ steps.deploy.outputs.url }}"
          echo "Deployed service: ${{ env.SERVICE_NAME }}" 